diff -rupN --no-dereference libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8/src/c_api.cpp libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8-new/src/c_api.cpp
--- libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8/src/c_api.cpp	2020-04-05 18:40:29.000000000 +0200
+++ libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8-new/src/c_api.cpp	2020-06-08 11:37:26.973014170 +0200
@@ -510,7 +510,7 @@ LAS_DLL LASErrorEnum LASReader_SetOutput
         
         transforms.erase( std::remove_if( transforms.begin(), 
                                   transforms.end(),
-                                  boost::bind( &IsReprojectionTransform, _1 ) ),
+                                  boost::bind( &IsReprojectionTransform, boost::placeholders::_1 ) ),
                   transforms.end());
         
         liblas::TransformPtr srs_transform = liblas::TransformPtr(new liblas::ReprojectionTransform(in_ref, *out_ref, &h));
@@ -1852,7 +1852,7 @@ LAS_DLL LASErrorEnum LASWriter_SetOutput
         
         transforms.erase( std::remove_if( transforms.begin(), 
                                   transforms.end(),
-                                  boost::bind( &IsReprojectionTransform, _1 ) ),
+                                  boost::bind( &IsReprojectionTransform, boost::placeholders::_1 ) ),
                   transforms.end());
         
         liblas::TransformPtr srs_transform = liblas::TransformPtr(new liblas::ReprojectionTransform(in_ref, *out_ref, &h));
diff -rupN --no-dereference libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8/src/header.cpp libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8-new/src/header.cpp
--- libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8/src/header.cpp	2020-04-05 18:40:29.000000000 +0200
+++ libLAS-d76a061f33a69a36ab116cd939c5d444b301efd8-new/src/header.cpp	2020-06-08 11:37:26.973014170 +0200
@@ -610,7 +610,7 @@ void Header::DeleteVLRs(std::string cons
 
     m_vlrs.erase( std::remove_if( m_vlrs.begin(),
                                   m_vlrs.end(),
-                                  boost::bind( &SameVLRs, name, id, _1 ) ),
+                                  boost::bind( &SameVLRs, name, id, boost::placeholders::_1 ) ),
                   m_vlrs.end());
 
     m_recordsCount = static_cast<uint32_t>(m_vlrs.size());
